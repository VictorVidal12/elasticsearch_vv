name: SonarQube Cloud

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Clonar el repositorio
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Paso 2: Limpiar el caché de Gradle
      - name: Clean Gradle Cache
        run: rm -rf ~/.gradle

      # Paso 3: Configurar JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      # Paso 4: Autenticarse en Docker
      - name: Authenticate with Docker Registry
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "${DOCKER_PASSWORD}" | docker login docker.elastic.co -u "${DOCKER_USERNAME}" --password-stdin

      # Paso 5: Construir el proyecto con dependencias actualizadas y aceptar términos
      - name: Build the project with refreshed dependencies and accepted terms
        run: ./gradlew clean build --refresh-dependencies --scan -Dgradle.buildScan.termsOfService=true --info

      # Paso 6: Actualizar el tag a 'latest' en Dockerfile
      - name: Update Docker base image to 'latest'
        run: |
          sed -i 's|@sha256:[a-fA-F0-9]*|:latest|g' path/to/Dockerfile

      # Paso 7: Configurar JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      # Paso 8: Construir y analizar con SonarCloud
      - name: Build and analyze with SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar -Dscan=false --info --stacktrace

